{"ast":null,"code":"// import { Add, Remove } from \"@material-ui/icons\";\n// import { useSelector } from \"react-redux\";\n// import styled from \"styled-components\";\n// import Announcement from \"../components/Announcement\";\n// import Footer from \"../components/Footer\";\n// import Navbar from \"../components/Navbar\";\n// import { mobile } from \"../responsive\";\n// import StripeCheckout from \"react-stripe-checkout\";\n// import { useEffect, useState } from \"react\";\n// import { userRequest } from \"../requestMethods\";\n// import { useNavigate } from \"react-router-dom\";\n// const KEY = process.env.REACT_APP_STRIPE;\n// const Container = styled.div``;\n// const Wrapper = styled.div`\n//   padding: 20px;\n//   ${mobile({ padding: \"10px\" })}\n// `;\n// const Title = styled.h1`\n//   font-weight: 300;\n//   text-align: center;\n// `;\n// const Top = styled.div`\n//   display: flex;\n//   align-items: center;\n//   justify-content: space-between;\n//   padding: 20px;\n// `;\n// const TopButton = styled.button`\n//   padding: 10px;\n//   font-weight: 600;\n//   cursor: pointer;\n//   border: ${(props) => props.type === \"filled\" && \"none\"};\n//   background-color: ${(props) =>\n//     props.type === \"filled\" ? \"black\" : \"transparent\"};\n//   color: ${(props) => props.type === \"filled\" && \"white\"};\n// `;\n// const TopTexts = styled.div`\n//   ${mobile({ display: \"none\" })}\n// `;\n// const TopText = styled.span`\n//   text-decoration: underline;\n//   cursor: pointer;\n//   margin: 0px 10px;\n// `;\n// const Bottom = styled.div`\n//   display: flex;\n//   justify-content: space-between;\n//   ${mobile({ flexDirection: \"column\" })}\n// `;\n// const Info = styled.div`\n//   flex: 3;\n// `;\n// const Product = styled.div`\n//   display: flex;\n//   justify-content: space-between;\n//   ${mobile({ flexDirection: \"column\" })}\n// `;\n// const ProductDetail = styled.div`\n//   flex: 2;\n//   display: flex;\n// `;\n// const Image = styled.img`\n//   width: 200px;\n// `;\n// const Details = styled.div`\n//   padding: 20px;\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: space-around;\n// `;\n// const ProductName = styled.span``;\n// const ProductId = styled.span``;\n// const ProductColor = styled.div`\n//   width: 20px;\n//   height: 20px;\n//   border-radius: 50%;\n//   background-color: ${(props) => props.color};\n// `;\n// const ProductSize = styled.span``;\n// const PriceDetail = styled.div`\n//   flex: 1;\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   justify-content: center;\n// `;\n// const ProductAmountContainer = styled.div`\n//   display: flex;\n//   align-items: center;\n//   margin-bottom: 20px;\n// `;\n// const ProductAmount = styled.div`\n//   font-size: 24px;\n//   margin: 5px;\n//   ${mobile({ margin: \"5px 15px\" })}\n// `;\n// const ProductPrice = styled.div`\n//   font-size: 30px;\n//   font-weight: 200;\n//   ${mobile({ marginBottom: \"20px\" })}\n// `;\n// const Hr = styled.hr`\n//   background-color: #eee;\n//   border: none;\n//   height: 1px;\n// `;\n// const Summary = styled.div`\n//   flex: 1;\n//   border: 0.5px solid lightgray;\n//   border-radius: 10px;\n//   padding: 20px;\n//   height: 50vh;\n// `;\n// const SummaryTitle = styled.h1`\n//   font-weight: 200;\n// `;\n// const SummaryItem = styled.div`\n//   margin: 30px 0px;\n//   display: flex;\n//   justify-content: space-between;\n//   font-weight: ${(props) => props.type === \"total\" && \"500\"};\n//   font-size: ${(props) => props.type === \"total\" && \"24px\"};\n// `;\n// const SummaryItemText = styled.span``;\n// const SummaryItemPrice = styled.span``;\n// const Button = styled.button`\n//   width: 100%;\n//   padding: 10px;\n//   background-color: black;\n//   color: white;\n//   font-weight: 600;\n// `;\n// const Cart = () => {\n//   const cart = useSelector((state) => state.cart);\n//   const [stripeToken, setStripeToken] = useState(null);\n//   const navigate = useNavigate();\n//   const onToken = (token) => {\n//     setStripeToken(token);\n//   };\n//   useEffect(() => {\n//     const makeRequest = async () => {\n//       try {\n//         const res = await userRequest.post(\"/checkout/payment\", {\n//           tokenId: stripeToken.id,\n//           amount: 500,\n//         });\n//         navigate.push(\"/success\", {\n//           stripeData: res.data,\n//           products: cart,\n//         });\n//       } catch {}\n//     };\n//     stripeToken && makeRequest();\n//   }, [stripeToken, cart.total, navigate]);\n//   return (\n//     <Container>\n//       <Navbar />\n//       <Announcement />\n//       <Wrapper>\n//         <Title>YOUR BAG</Title>\n//         <Top>\n//           <TopButton>CONTINUE SHOPPING</TopButton>\n//           <TopTexts>\n//             <TopText>Shopping Bag(2)</TopText>\n//             <TopText>Your Wishlist (0)</TopText>\n//           </TopTexts>\n//           <TopButton type=\"filled\">CHECKOUT NOW</TopButton>\n//         </Top>\n//         <Bottom>\n//           <Info>\n//             {cart.products.map((product) => (\n//               <Product>\n//                 <ProductDetail>\n//                   <Image src={product.img} />\n//                   <Details>\n//                     <ProductName>\n//                       <b>Product:</b> {product.title}\n//                     </ProductName>\n//                     <ProductId>\n//                       <b>ID:</b> {product._id}\n//                     </ProductId>\n//                     <ProductColor color={product.color} />\n//                     <ProductSize>\n//                       <b>Size:</b> {product.size}\n//                     </ProductSize>\n//                   </Details>\n//                 </ProductDetail>\n//                 <PriceDetail>\n//                   <ProductAmountContainer>\n//                     <Add />\n//                     <ProductAmount>{product.quantity}</ProductAmount>\n//                     <Remove />\n//                   </ProductAmountContainer>\n//                   <ProductPrice>\n//                     $ {product.price * product.quantity}\n//                   </ProductPrice>\n//                 </PriceDetail>\n//               </Product>\n//             ))}\n//             <Hr />\n//           </Info>\n//           <Summary>\n//             <SummaryTitle>ORDER SUMMARY</SummaryTitle>\n//             <SummaryItem>\n//               <SummaryItemText>Subtotal</SummaryItemText>\n//               <SummaryItemPrice>$ {cart.total}</SummaryItemPrice>\n//             </SummaryItem>\n//             <SummaryItem>\n//               <SummaryItemText>Estimated Shipping</SummaryItemText>\n//               <SummaryItemPrice>$ 5.90</SummaryItemPrice>\n//             </SummaryItem>\n//             <SummaryItem>\n//               <SummaryItemText>Shipping Discount</SummaryItemText>\n//               <SummaryItemPrice>$ -5.90</SummaryItemPrice>\n//             </SummaryItem>\n//             <SummaryItem type=\"total\">\n//               <SummaryItemText>Total</SummaryItemText>\n//               <SummaryItemPrice>$ {cart.total}</SummaryItemPrice>\n//             </SummaryItem>\n//             <StripeCheckout\n//               name=\"Lama Shop\"\n//               image=\"https://avatars.githubusercontent.com/u/1486366?v=4\"\n//               billingAddress\n//               shippingAddress\n//               description={`Your total is $${cart.total}`}\n//               amount={cart.total * 100}\n//               token={onToken}\n//               stripeKey={KEY}\n//             >\n//               <Button>CHECKOUT NOW</Button>\n//             </StripeCheckout>\n//           </Summary>\n//         </Bottom>\n//       </Wrapper>\n//       <Footer />\n//     </Container>\n//   );\n// };\n// export default Cart;","map":{"version":3,"sources":["C:/Users/huynh/OneDrive/Desktop/ecommerceu/client/src/pages/Cart.jsx"],"names":[],"mappingssourcesContent":["// import { Add, Remove } from \"@material-ui/icons\";\n// import { useSelector } from \"react-redux\";\n// import styled from \"styled-components\";\n// import Announcement from \"../components/Announcement\";\n// import Footer from \"../components/Footer\";\n// import Navbar from \"../components/Navbar\";\n// import { mobile } from \"../responsive\";\n// import StripeCheckout from \"react-stripe-checkout\";\n// import { useEffect, useState } from \"react\";\n// import { userRequest } from \"../requestMethods\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const KEY = process.env.REACT_APP_STRIPE;\n\n// const Container = styled.div``;\n\n// const Wrapper = styled.div`\n//   padding: 20px;\n//   ${mobile({ padding: \"10px\" })}\n// `;\n\n// const Title = styled.h1`\n//   font-weight: 300;\n//   text-align: center;\n// `;\n\n// const Top = styled.div`\n//   display: flex;\n//   align-items: center;\n//   justify-content: space-between;\n//   padding: 20px;\n// `;\n\n// const TopButton = styled.button`\n//   padding: 10px;\n//   font-weight: 600;\n//   cursor: pointer;\n//   border: ${(props) => props.type === \"filled\" && \"none\"};\n//   background-color: ${(props) =>\n//     props.type === \"filled\" ? \"black\" : \"transparent\"};\n//   color: ${(props) => props.type === \"filled\" && \"white\"};\n// `;\n\n// const TopTexts = styled.div`\n//   ${mobile({ display: \"none\" })}\n// `;\n// const TopText = styled.span`\n//   text-decoration: underline;\n//   cursor: pointer;\n//   margin: 0px 10px;\n// `;\n\n// const Bottom = styled.div`\n//   display: flex;\n//   justify-content: space-between;\n//   ${mobile({ flexDirection: \"column\" })}\n// `;\n\n// const Info = styled.div`\n//   flex: 3;\n// `;\n\n// const Product = styled.div`\n//   display: flex;\n//   justify-content: space-between;\n//   ${mobile({ flexDirection: \"column\" })}\n// `;\n\n// const ProductDetail = styled.div`\n//   flex: 2;\n//   display: flex;\n// `;\n\n// const Image = styled.img`\n//   width: 200px;\n// `;\n\n// const Details = styled.div`\n//   padding: 20px;\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: space-around;\n// `;\n\n// const ProductName = styled.span``;\n\n// const ProductId = styled.span``;\n\n// const ProductColor = styled.div`\n//   width: 20px;\n//   height: 20px;\n//   border-radius: 50%;\n//   background-color: ${(props) => props.color};\n// `;\n\n// const ProductSize = styled.span``;\n\n// const PriceDetail = styled.div`\n//   flex: 1;\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   justify-content: center;\n// `;\n\n// const ProductAmountContainer = styled.div`\n//   display: flex;\n//   align-items: center;\n//   margin-bottom: 20px;\n// `;\n\n// const ProductAmount = styled.div`\n//   font-size: 24px;\n//   margin: 5px;\n//   ${mobile({ margin: \"5px 15px\" })}\n// `;\n\n// const ProductPrice = styled.div`\n//   font-size: 30px;\n//   font-weight: 200;\n//   ${mobile({ marginBottom: \"20px\" })}\n// `;\n\n// const Hr = styled.hr`\n//   background-color: #eee;\n//   border: none;\n//   height: 1px;\n// `;\n\n// const Summary = styled.div`\n//   flex: 1;\n//   border: 0.5px solid lightgray;\n//   border-radius: 10px;\n//   padding: 20px;\n//   height: 50vh;\n// `;\n\n// const SummaryTitle = styled.h1`\n//   font-weight: 200;\n// `;\n\n// const SummaryItem = styled.div`\n//   margin: 30px 0px;\n//   display: flex;\n//   justify-content: space-between;\n//   font-weight: ${(props) => props.type === \"total\" && \"500\"};\n//   font-size: ${(props) => props.type === \"total\" && \"24px\"};\n// `;\n\n// const SummaryItemText = styled.span``;\n\n// const SummaryItemPrice = styled.span``;\n\n// const Button = styled.button`\n//   width: 100%;\n//   padding: 10px;\n//   background-color: black;\n//   color: white;\n//   font-weight: 600;\n// `;\n\n// const Cart = () => {\n//   const cart = useSelector((state) => state.cart);\n//   const [stripeToken, setStripeToken] = useState(null);\n//   const navigate = useNavigate();\n\n//   const onToken = (token) => {\n//     setStripeToken(token);\n//   };\n\n//   useEffect(() => {\n//     const makeRequest = async () => {\n//       try {\n//         const res = await userRequest.post(\"/checkout/payment\", {\n//           tokenId: stripeToken.id,\n//           amount: 500,\n//         });\n//         navigate.push(\"/success\", {\n//           stripeData: res.data,\n//           products: cart,\n//         });\n//       } catch {}\n//     };\n//     stripeToken && makeRequest();\n//   }, [stripeToken, cart.total, navigate]);\n//   return (\n//     <Container>\n//       <Navbar />\n//       <Announcement />\n//       <Wrapper>\n//         <Title>YOUR BAG</Title>\n//         <Top>\n//           <TopButton>CONTINUE SHOPPING</TopButton>\n//           <TopTexts>\n//             <TopText>Shopping Bag(2)</TopText>\n//             <TopText>Your Wishlist (0)</TopText>\n//           </TopTexts>\n//           <TopButton type=\"filled\">CHECKOUT NOW</TopButton>\n//         </Top>\n//         <Bottom>\n//           <Info>\n//             {cart.products.map((product) => (\n//               <Product>\n//                 <ProductDetail>\n//                   <Image src={product.img} />\n//                   <Details>\n//                     <ProductName>\n//                       <b>Product:</b> {product.title}\n//                     </ProductName>\n//                     <ProductId>\n//                       <b>ID:</b> {product._id}\n//                     </ProductId>\n//                     <ProductColor color={product.color} />\n//                     <ProductSize>\n//                       <b>Size:</b> {product.size}\n//                     </ProductSize>\n//                   </Details>\n//                 </ProductDetail>\n//                 <PriceDetail>\n//                   <ProductAmountContainer>\n//                     <Add />\n//                     <ProductAmount>{product.quantity}</ProductAmount>\n//                     <Remove />\n//                   </ProductAmountContainer>\n//                   <ProductPrice>\n//                     $ {product.price * product.quantity}\n//                   </ProductPrice>\n//                 </PriceDetail>\n//               </Product>\n//             ))}\n//             <Hr />\n//           </Info>\n//           <Summary>\n//             <SummaryTitle>ORDER SUMMARY</SummaryTitle>\n//             <SummaryItem>\n//               <SummaryItemText>Subtotal</SummaryItemText>\n//               <SummaryItemPrice>$ {cart.total}</SummaryItemPrice>\n//             </SummaryItem>\n//             <SummaryItem>\n//               <SummaryItemText>Estimated Shipping</SummaryItemText>\n//               <SummaryItemPrice>$ 5.90</SummaryItemPrice>\n//             </SummaryItem>\n//             <SummaryItem>\n//               <SummaryItemText>Shipping Discount</SummaryItemText>\n//               <SummaryItemPrice>$ -5.90</SummaryItemPrice>\n//             </SummaryItem>\n//             <SummaryItem type=\"total\">\n//               <SummaryItemText>Total</SummaryItemText>\n//               <SummaryItemPrice>$ {cart.total}</SummaryItemPrice>\n//             </SummaryItem>\n//             <StripeCheckout\n//               name=\"Lama Shop\"\n//               image=\"https://avatars.githubusercontent.com/u/1486366?v=4\"\n//               billingAddress\n//               shippingAddress\n//               description={`Your total is $${cart.total}`}\n//               amount={cart.total * 100}\n//               token={onToken}\n//               stripeKey={KEY}\n//             >\n//               <Button>CHECKOUT NOW</Button>\n//             </StripeCheckout>\n//           </Summary>\n//         </Bottom>\n//       </Wrapper>\n//       <Footer />\n//     </Container>\n//   );\n// };\n\n// export default Cart;\n"]},"metadata":{},"sourceType":"module"}