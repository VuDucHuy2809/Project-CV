/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.QuanLy;

import BUS.ChiTietHoaDonBUS;
import BUS.GiayBUS;
import BUS.HoaDonBUS;
import ChucNangKhac.ChucNang;
import ChucNangKhac.tableFunc;
import DTO.ChiTietHoaDon;
import DTO.Giay;
import DTO.HoaDon;
import DTO.NhanVien;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class ThemHoaDon extends javax.swing.JFrame {

    ArrayList<ChiTietHoaDon> dataCTHD = new ArrayList<>();
    DefaultTableModel defaults = null;
    GiayBUS giaybus = new GiayBUS();
    HoaDonBUS hdbus = new HoaDonBUS();
    NhanVien nhanvien = null;
    ChiTietHoaDonBUS cthdbus = new ChiTietHoaDonBUS();

    /**
     * Creates new form ThemHoaDon
     */
    public ThemHoaDon() {
        initComponents();
        initialization();
        performEvent();
    }

    public ThemHoaDon(NhanVien nv) {
        setNhanvien(nv);
        initComponents();
        initialization();
        performEvent();
    }

    public NhanVien getNhanvien() {
        return nhanvien;
    }

    public void setNhanvien(NhanVien nhanvien) {
        this.nhanvien = nhanvien;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        idBill = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        addDetail = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        number = new javax.swing.JTextField();
        id = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        addBill = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        sumPrice = new javax.swing.JLabel();
        isEdit = new javax.swing.JCheckBox();
        addDetail1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        background.setBackground(new java.awt.Color(255, 255, 255));
        background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        idBill.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        idBill.setEnabled(false);
        background.add(idBill, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, 414, -1));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        jLabel1.setText("Mã hóa đơn");
        background.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        table.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(table);

        background.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 710, 364));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 51, 51));
        jLabel3.setText("Chi tiết Hóa đơn");
        background.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        addDetail.setBackground(new java.awt.Color(255, 255, 255));
        addDetail.setFont(new java.awt.Font("Times New Roman", 1, 22)); // NOI18N
        addDetail.setForeground(new java.awt.Color(0, 153, 102));
        addDetail.setText("Hủy Bỏ");
        background.add(addDetail, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 210, 220, -1));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        background.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 0, 10, 760));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        jLabel2.setText("Chọn mã giày");
        background.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 40, -1, -1));

        number.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        background.add(number, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 120, 460, -1));

        id.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        background.add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 30, 460, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        jLabel4.setText("Nhập SL:");
        background.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 120, -1, -1));

        addBill.setBackground(new java.awt.Color(255, 255, 255));
        addBill.setFont(new java.awt.Font("Times New Roman", 1, 22)); // NOI18N
        addBill.setForeground(new java.awt.Color(0, 204, 0));
        addBill.setText("Thêm Hóa Đơn");
        background.add(addBill, new org.netbeans.lib.awtextra.AbsoluteConstraints(1320, 700, -1, -1));

        editBtn.setBackground(new java.awt.Color(255, 255, 255));
        editBtn.setFont(new java.awt.Font("Times New Roman", 1, 22)); // NOI18N
        editBtn.setForeground(new java.awt.Color(0, 153, 102));
        editBtn.setText("Sửa Chi Tiết");
        background.add(editBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 530, -1, -1));

        deleteBtn.setBackground(new java.awt.Color(255, 255, 255));
        deleteBtn.setFont(new java.awt.Font("Times New Roman", 1, 22)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(0, 153, 102));
        deleteBtn.setText("Xóa Chi Tiết");
        background.add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 530, -1, -1));

        sumPrice.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        sumPrice.setForeground(new java.awt.Color(255, 0, 51));
        sumPrice.setText("Tổng :0");
        background.add(sumPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 700, 440, 60));

        isEdit.setText("Sửa");
        isEdit.setEnabled(false);
        background.add(isEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1420, 170, -1, -1));

        addDetail1.setBackground(new java.awt.Color(255, 255, 255));
        addDetail1.setFont(new java.awt.Font("Times New Roman", 1, 22)); // NOI18N
        addDetail1.setForeground(new java.awt.Color(0, 153, 102));
        addDetail1.setText("Cập nhật");
        background.add(addDetail1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 210, 220, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, 1556, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThemHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThemHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThemHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThemHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThemHoaDon().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBill;
    private javax.swing.JButton addDetail;
    private javax.swing.JButton addDetail1;
    private javax.swing.JPanel background;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JComboBox<String> id;
    private javax.swing.JTextField idBill;
    private javax.swing.JCheckBox isEdit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField number;
    private javax.swing.JLabel sumPrice;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

    private void initialization() {
        setLocationRelativeTo(null);
        loadCombobox();
        idBill.setText(hdbus.createAutoBild());
        initTable();
        loadTableData();
        setDefaultCloseOperation(HIDE_ON_CLOSE);
    }

    private void performEvent() {
        ActionListener ac = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                switch (e.getActionCommand()) {
                    case "Cập nhật": {
                        try {
                            if (number.getText().compareTo("") == 0 || Integer.valueOf(number.getText()) <= 0) {
                                throw new Exception();
                            }
                        } catch (Exception ex) {
                            JOptionPane.showMessageDialog(null, "Số Lượng không hợp lệ");
                            return;
                        }

                        int num = Integer.valueOf(number.getText());
                        String idGiay = String.valueOf(id.getSelectedItem()).substring(0, 7);
                        if (num > giaybus.getNumberById(idGiay)) {
                            JOptionPane.showMessageDialog(null, "Số lượng trong kho không đủ");
                            return;
                        }

                        if (isEdit.isSelected()) {
                            for (ChiTietHoaDon ct : dataCTHD) {
                                if (ct.getMaGiay().compareTo(idGiay) == 0) {
                                    ct.setSoLuong(num);
                                }
                            }
                            loadTableData();
                            id.setSelectedIndex(0);
                            id.setEnabled(true);
                            number.setText("");
                            
                            return;
                        }

                        dataCTHD = cthdbus.addDetailIntoArray(dataCTHD, idGiay, num);
                        loadTableData();
                        break;

                    }
                    case "Thêm Hóa Đơn": {
                        LocalDate ngayxuat = LocalDate.now();
                        String stafId = nhanvien.getMaNhanVien();
                        
                        //Them hoa don
                        HoaDon hd = new HoaDon(idBill.getText(), stafId, ngayxuat);
                        //ThemChiTiet
                        for(ChiTietHoaDon ct : dataCTHD){
                            ct.setMaHoaDon(idBill.getText());
                        }
                        //Them vao DB
                        if(hdbus.addBill(hd) == false || cthdbus.addDetailIntoDB(dataCTHD) == false){
                            JOptionPane.showMessageDialog(null, "Không thể thêm");
                            return;
                        }
                        JOptionPane.showMessageDialog(null, "Thêm thành công");
                        //Xoa het du lieu
                        dataCTHD = new ArrayList<>();
                        //Cap nhat ma hoa don moi
                        idBill.setText(hdbus.createAutoBild());
                        loadTableData();
                        break;
                    }
                    case "Sửa Chi Tiết": {
                        int select = table.getSelectedRow();
                        if (select < 0) {
                            JOptionPane.showMessageDialog(null, "Bạn chưa chọn hàng nào để sửa");
                            return;
                        }
                        String Id = String.valueOf(table.getValueAt(select, 0));
                        int num = Integer.valueOf(String.valueOf(table.getValueAt(select, 2)));
                        id.setSelectedItem(Id + "-" + giaybus.getNameById(Id));
                        number.setText(String.valueOf(num));
                        id.setEnabled(false);
                        isEdit.setSelected(true);

                        break;
                    }
                    case "Xóa Chi Tiết": {
                        int select = table.getSelectedRow();
                        if (select < 0) {
                            JOptionPane.showMessageDialog(null, "Bạn chưa chọn hàng nào để sửa");
                            return;
                        }
                        if(JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa ?", "Xác nhận", 0) != 0) return;
                        String Id = String.valueOf(table.getValueAt(select, 0));
                        dataCTHD = cthdbus.deleteDetailById(dataCTHD,Id);
                        loadTableData();
                        break;
                    }
                    case "Hủy Bỏ": {
                        id.setSelectedIndex(0);
                        id.setEnabled(true);
                        number.setText("");
                        break;
                    }
                }
            }
        };
        for (Component c : background.getComponents()) {
            if (c instanceof JButton) {
                ((JButton) c).addActionListener(ac);
                ((JButton) c).setActionCommand(((JButton) c).getActionCommand());
            }
        }
    }

    private void loadCombobox() {
        ArrayList<Giay> data = giaybus.getAllData();
        for (Giay g : data) {
            id.addItem(g.getMaGiay() + "-" + g.getTenGiay());
        }
    }

    private void initTable() {
        String[] header = {"Mã Giày", "Tên Giày", "Số Lượng","Giá"};
        defaults = (DefaultTableModel) table.getModel();
        for (String s : header) {
            defaults.addColumn(s);
        }

        table.setRowHeight(25);
    }

    private void loadTableData() {
        tableFunc.removeAllTable(table);
        for (ChiTietHoaDon ct : dataCTHD) {
            Object[] obj = {
                ct.getMaGiay(),
                giaybus.getNameById(ct.getMaGiay()),
                ct.getSoLuong(),
                ChucNang.convetNumberToMoney(String.valueOf(giaybus.getPriceById(ct.getMaGiay())))
            };
            defaults.addRow(obj);
        }
        computePrice();
    }

    private void computePrice() {
        int sum = 0;
        for(ChiTietHoaDon ct : dataCTHD){
            sum += ct.getSoLuong() * giaybus.getPriceById(ct.getMaGiay());
        }
        sumPrice.setText("Tổng : " + ChucNang.convetNumberToMoney(String.valueOf(sum)) + " VNĐ");
    }
    
    
}
